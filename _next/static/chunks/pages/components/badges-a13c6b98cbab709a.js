(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2501],{89557:function(a,r,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/badges",function(){return e(24100)}])},6982:function(a,r,e){"use strict";var n=e(85893),t=e(90263),s=e(50591);let o=a=>{let{sx:r,skin:e,color:o}=a,i=(0,s.Z)(),l={primary:{...i.primaryLight},secondary:{...i.secondaryLight},success:{...i.successLight},error:{...i.errorLight},warning:{...i.warningLight},info:{...i.infoLight}};return(0,n.jsx)(t.Z,{...a,sx:"light"===e&&o?Object.assign({"& .MuiBadge-badge":l[o]},r):r})};r.Z=o},24100:function(a,r,e){"use strict";e.r(r),e.d(r,{default:function(){return G}});var n=e(85893),t=e(86886),s=e(15861),o=e(92223),i=e(90263),l=e(87952);let c=()=>(0,n.jsxs)("div",{className:"demo-space-x",children:[(0,n.jsx)(i.Z,{variant:"dot",color:"primary",children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(i.Z,{variant:"dot",color:"secondary",children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(i.Z,{variant:"dot",color:"error",children:(0,n.jsx)(s.Z,{children:"Typography"})})]}),g=()=>(0,n.jsxs)("div",{className:"demo-space-x",children:[(0,n.jsx)(i.Z,{badgeContent:4,color:"primary",children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(i.Z,{badgeContent:4,color:"secondary",children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(i.Z,{badgeContent:4,color:"success",children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(i.Z,{badgeContent:4,color:"error",children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(i.Z,{badgeContent:4,color:"warning",children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(i.Z,{badgeContent:4,color:"info",children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})})]});var m=e(90948),d=e(6982);let p=(0,m.ZP)("div")(a=>{let{theme:r}=a;return{"& > *":{marginRight:"".concat(r.spacing(6)," !important")}}}),v=()=>(0,n.jsxs)(p,{className:"demo-space-x",children:[(0,n.jsx)(d.Z,{skin:"light",color:"primary",badgeContent:4,children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(d.Z,{skin:"light",color:"secondary",badgeContent:4,children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(d.Z,{skin:"light",color:"success",badgeContent:4,children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(d.Z,{skin:"light",color:"error",badgeContent:4,children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(d.Z,{skin:"light",color:"warning",badgeContent:4,children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(d.Z,{skin:"light",color:"info",badgeContent:4,children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})})]}),u=(0,m.ZP)("div")(a=>{let{theme:r}=a;return{"& > *":{marginRight:"".concat(r.spacing(6)," !important")}}}),x=()=>(0,n.jsxs)(u,{className:"demo-space-x",children:[(0,n.jsx)(i.Z,{color:"primary",badgeContent:" ",children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar",variant:"square"})}),(0,n.jsx)(i.Z,{color:"primary",variant:"dot",children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar",variant:"square"})}),(0,n.jsx)(i.Z,{color:"primary",overlap:"circular",badgeContent:" ",children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(i.Z,{color:"primary",overlap:"circular",variant:"dot",children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})})]}),h=(0,m.ZP)("div")(a=>{let{theme:r}=a;return{"& > *":{marginRight:"".concat(r.spacing(6)," !important")}}}),B=()=>(0,n.jsxs)(h,{className:"demo-space-x",children:[(0,n.jsx)(i.Z,{badgeContent:99,color:"primary",children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(i.Z,{badgeContent:100,color:"primary",children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(i.Z,{badgeContent:1e3,max:999,color:"primary",children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})})]}),j=()=>(0,n.jsxs)("div",{className:"demo-space-x",children:[(0,n.jsx)(i.Z,{color:"primary",variant:"dot",children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(i.Z,{color:"primary",variant:"dot",anchorOrigin:{vertical:"bottom",horizontal:"right"},children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(i.Z,{color:"primary",variant:"dot",anchorOrigin:{vertical:"bottom",horizontal:"left"},children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(i.Z,{color:"primary",variant:"dot",anchorOrigin:{vertical:"top",horizontal:"left"},children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})})]});var A=e(67294),y=e(72852),b=e(11057),f=e(56863),C=e(50480),U=e(63730);let Z=(0,m.ZP)("div")(a=>{let{theme:r}=a;return{display:"flex",alignItems:"center","& > *":{marginRight:"".concat(r.spacing(6)," !important")}}}),N=()=>{let[a,r]=(0,A.useState)(1),[e,t]=(0,A.useState)(!1),s=()=>{t(!e)};return(0,n.jsxs)(A.Fragment,{children:[(0,n.jsxs)(Z,{className:"demo-space-x",children:[(0,n.jsx)(i.Z,{badgeContent:a,color:"primary",children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsxs)(f.Z,{size:"small",children:[(0,n.jsx)(b.Z,{"aria-label":"reduce",onClick:()=>r(Math.max(a-1,0)),children:(0,n.jsx)(U.Z,{icon:"tabler:minus",fontSize:20})}),(0,n.jsx)(b.Z,{"aria-label":"increase",onClick:()=>r(a+1),children:(0,n.jsx)(U.Z,{icon:"tabler:plus",fontSize:20})})]})]}),(0,n.jsxs)(Z,{className:"demo-space-x",children:[(0,n.jsx)(i.Z,{variant:"dot",color:"primary",invisible:e,children:(0,n.jsx)(l.Z,{src:"/images/avatars/8.png",alt:"User Avatar"})}),(0,n.jsx)(C.Z,{label:"Show Badge",control:(0,n.jsx)(y.Z,{color:"primary",checked:!e,onChange:s})})]})]})},I=(0,n.jsx)("pre",{className:"language-jsx",children:(0,n.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Badge from '@mui/material/Badge'\nimport Avatar from '@mui/material/Avatar'\n\nconst BadgesAlignment = () => {\n  return (\n    <div className='demo-space-x'>\n      <Badge color='primary' variant='dot'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge color='primary' variant='dot' anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge color='primary' variant='dot' anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge color='primary' variant='dot' anchorOrigin={{ vertical: 'top', horizontal: 'left' }}>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n    </div>\n  )\n}\n\nexport default BadgesAlignment\n"})}),w=(0,n.jsx)("pre",{className:"language-jsx",children:(0,n.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Badge from '@mui/material/Badge'\nimport Avatar from '@mui/material/Avatar'\n\nconst BadgesBasic = () => {\n  return (\n    <div className='demo-space-x'>\n      <Badge badgeContent={4} color='primary'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge badgeContent={4} color='secondary'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge badgeContent={4} color='success'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge badgeContent={4} color='error'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge badgeContent={4} color='warning'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge badgeContent={4} color='info'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n    </div>\n  )\n}\n\nexport default BadgesBasic\n"})}),S=(0,n.jsx)("pre",{className:"language-jsx",children:(0,n.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Badge from '@mui/material/Badge'\nimport Avatar from '@mui/material/Avatar'\nimport Typography from '@mui/material/Typography'\n\nconst BadgesDot = () => {\n  return (\n    <div className='demo-space-x'>\n      <Badge variant='dot' color='primary'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge variant='dot' color='secondary'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge variant='dot' color='error'>\n        <Typography>Typography</Typography>\n      </Badge>\n    </div>\n  )\n}\n\nexport default BadgesDot\n"})}),k=(0,n.jsx)("pre",{className:"language-jsx",children:(0,n.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Avatar from '@mui/material/Avatar'\nimport { styled } from '@mui/material/styles'\n\n// ** Custom Components Imports\nimport CustomBadge from 'src/@core/components/mui/badge'\n\n// Styled component for a wrapper\nconst Wrapper = styled('div')(({ theme }) => ({\n  '& > *': {\n    marginRight: {theme.spacing(6)} !important\n  }\n}))\n\nconst BadgesLight = () => {\n  return (\n    <Wrapper className='demo-space-x'>\n      <CustomBadge skin='light' color='primary' badgeContent={4}>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </CustomBadge>\n      <CustomBadge skin='light' color='secondary' badgeContent={4}>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </CustomBadge>\n      <CustomBadge skin='light' color='success' badgeContent={4}>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </CustomBadge>\n      <CustomBadge skin='light' color='error' badgeContent={4}>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </CustomBadge>\n      <CustomBadge skin='light' color='warning' badgeContent={4}>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </CustomBadge>\n      <CustomBadge skin='light' color='info' badgeContent={4}>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </CustomBadge>\n    </Wrapper>\n  )\n}\n\nexport default BadgesLight\n"})}),W=(0,n.jsx)("pre",{className:"language-jsx",children:(0,n.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Badge from '@mui/material/Badge'\nimport Avatar from '@mui/material/Avatar'\nimport { styled } from '@mui/material/styles'\n\n// Styled component for the wrapper\nconst Wrapper = styled('div')(({ theme }) => ({\n  '& > *': {\n    marginRight: {theme.spacing(6)} !important\n  }\n}))\n\nconst BadgesMaxValue = () => {\n  return (\n    <Wrapper className='demo-space-x'>\n      <Badge badgeContent={99} color='primary'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge badgeContent={100} color='primary'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge badgeContent={1000} max={999} color='primary'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n    </Wrapper>\n  )\n}\n\nexport default BadgesMaxValue\n"})}),M=(0,n.jsx)("pre",{className:"language-jsx",children:(0,n.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Badge from '@mui/material/Badge'\nimport Avatar from '@mui/material/Avatar'\nimport { styled } from '@mui/material/styles'\n\n// Styled component for the wrapper\nconst Wrapper = styled('div')(({ theme }) => ({\n  '& > *': {\n    marginRight: {theme.spacing(6)} !important\n  }\n}))\n\nconst BadgesOverlap = () => {\n  return (\n    <Wrapper className='demo-space-x'>\n      <Badge color='primary' badgeContent=' '>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' variant='square' />\n      </Badge>\n      <Badge color='primary' variant='dot'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' variant='square' />\n      </Badge>\n      <Badge color='primary' overlap='circular' badgeContent=' '>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge color='primary' overlap='circular' variant='dot'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n    </Wrapper>\n  )\n}\n\nexport default BadgesOverlap\n"})}),z=(0,n.jsx)("pre",{className:"language-jsx",children:(0,n.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState, Fragment } from 'react'\n\n// ** MUI Imports\nimport Badge from '@mui/material/Badge'\nimport Switch from '@mui/material/Switch'\nimport Button from '@mui/material/Button'\nimport Avatar from '@mui/material/Avatar'\nimport { styled } from '@mui/material/styles'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport FormControlLabel from '@mui/material/FormControlLabel'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\n// Styled component for a wrapper\nconst Wrapper = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  '& > *': {\n    marginRight: {theme.spacing(6)} !important\n  }\n}))\n\nconst BadgesVisibility = () => {\n  // ** States\n  const [count, setCount] = useState(1)\n  const [invisible, setInvisible] = useState(false)\n\n  const handleBadgeVisibility = () => {\n    setInvisible(!invisible)\n  }\n\n  return (\n    <Fragment>\n      <Wrapper className='demo-space-x'>\n        <Badge badgeContent={count} color='primary'>\n          <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n        </Badge>\n        <ButtonGroup size='small'>\n          <Button aria-label='reduce' onClick={() => setCount(Math.max(count - 1, 0))}>\n            <Icon icon='tabler:minus' fontSize={20} />\n          </Button>\n          <Button aria-label='increase' onClick={() => setCount(count + 1)}>\n            <Icon icon='tabler:plus' fontSize={20} />\n          </Button>\n        </ButtonGroup>\n      </Wrapper>\n\n      <Wrapper className='demo-space-x'>\n        <Badge variant='dot' color='primary' invisible={invisible}>\n          <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n        </Badge>\n        <FormControlLabel\n          label='Show Badge'\n          control={<Switch color='primary' checked={!invisible} onChange={handleBadgeVisibility} />}\n        />\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nexport default BadgesVisibility\n"})}),O=(0,n.jsx)("pre",{className:"language-jsx",children:(0,n.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Badge from '@mui/material/Badge'\nimport Avatar from '@mui/material/Avatar'\n\nconst BadgesBasic = () => {\n  return (\n    <div className='demo-space-x'>\n      <Badge badgeContent={4} color='primary'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge badgeContent={4} color='secondary'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge badgeContent={4} color='success'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge badgeContent={4} color='error'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge badgeContent={4} color='warning'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge badgeContent={4} color='info'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n    </div>\n  )\n}\n\nexport default BadgesBasic\n"})}),L=(0,n.jsx)("pre",{className:"language-jsx",children:(0,n.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Badge from '@mui/material/Badge'\nimport Avatar from '@mui/material/Avatar'\nimport Typography from '@mui/material/Typography'\n\nconst BadgesDot = () => {\n  return (\n    <div className='demo-space-x'>\n      <Badge variant='dot' color='primary'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge variant='dot' color='secondary'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge variant='dot' color='error'>\n        <Typography>Typography</Typography>\n      </Badge>\n    </div>\n  )\n}\n\nexport default BadgesDot\n"})}),P=(0,n.jsx)("pre",{className:"language-jsx",children:(0,n.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Badge from '@mui/material/Badge'\nimport Avatar from '@mui/material/Avatar'\nimport { styled } from '@mui/material/styles'\n\n// Styled component for the wrapper\nconst Wrapper = styled('div')(({ theme }) => ({\n  '& > *': {\n    marginRight: {theme.spacing(6)} !important\n  }\n}))\n\nconst BadgesOverlap = () => {\n  return (\n    <Wrapper className='demo-space-x'>\n      <Badge color='primary' badgeContent=' '>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' variant='square' />\n      </Badge>\n      <Badge color='primary' variant='dot'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' variant='square' />\n      </Badge>\n      <Badge color='primary' overlap='circular' badgeContent=' '>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge color='primary' overlap='circular' variant='dot'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n    </Wrapper>\n  )\n}\n\nexport default BadgesOverlap\n"})}),R=(0,n.jsx)("pre",{className:"language-jsx",children:(0,n.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState, Fragment } from 'react'\n\n// ** MUI Imports\nimport Badge from '@mui/material/Badge'\nimport Switch from '@mui/material/Switch'\nimport Button from '@mui/material/Button'\nimport Avatar from '@mui/material/Avatar'\nimport { styled } from '@mui/material/styles'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport FormControlLabel from '@mui/material/FormControlLabel'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\n// Styled component for a wrapper\nconst Wrapper = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  '& > *': {\n    marginRight: {theme.spacing(6)} !important\n  }\n}))\n\nconst BadgesVisibility = () => {\n  // ** States\n  const [count, setCount] = useState<number>(1)\n  const [invisible, setInvisible] = useState<boolean>(false)\n\n  const handleBadgeVisibility = () => {\n    setInvisible(!invisible)\n  }\n\n  return (\n    <Fragment>\n      <Wrapper className='demo-space-x'>\n        <Badge badgeContent={count} color='primary'>\n          <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n        </Badge>\n        <ButtonGroup size='small'>\n          <Button aria-label='reduce' onClick={() => setCount(Math.max(count - 1, 0))}>\n            <Icon icon='tabler:minus' fontSize={20} />\n          </Button>\n          <Button aria-label='increase' onClick={() => setCount(count + 1)}>\n            <Icon icon='tabler:plus' fontSize={20} />\n          </Button>\n        </ButtonGroup>\n      </Wrapper>\n\n      <Wrapper className='demo-space-x'>\n        <Badge variant='dot' color='primary' invisible={invisible}>\n          <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n        </Badge>\n        <FormControlLabel\n          label='Show Badge'\n          control={<Switch color='primary' checked={!invisible} onChange={handleBadgeVisibility} />}\n        />\n      </Wrapper>\n    </Fragment>\n  )\n}\n\nexport default BadgesVisibility\n"})}),T=(0,n.jsx)("pre",{className:"language-jsx",children:(0,n.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Avatar from '@mui/material/Avatar'\nimport { styled } from '@mui/material/styles'\n\n// ** Custom Components Imports\nimport CustomBadge from 'src/@core/components/mui/badge'\n\n// Styled component for a wrapper\nconst Wrapper = styled('div')(({ theme }) => ({\n  '& > *': {\n    marginRight: {theme.spacing(6)} !important\n  }\n}))\n\nconst BadgesLight = () => {\n  return (\n    <Wrapper className='demo-space-x'>\n      <CustomBadge skin='light' color='primary' badgeContent={4}>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </CustomBadge>\n      <CustomBadge skin='light' color='secondary' badgeContent={4}>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </CustomBadge>\n      <CustomBadge skin='light' color='success' badgeContent={4}>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </CustomBadge>\n      <CustomBadge skin='light' color='error' badgeContent={4}>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </CustomBadge>\n      <CustomBadge skin='light' color='warning' badgeContent={4}>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </CustomBadge>\n      <CustomBadge skin='light' color='info' badgeContent={4}>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </CustomBadge>\n    </Wrapper>\n  )\n}\n\nexport default BadgesLight\n"})}),F=(0,n.jsx)("pre",{className:"language-jsx",children:(0,n.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Badge from '@mui/material/Badge'\nimport Avatar from '@mui/material/Avatar'\nimport { styled } from '@mui/material/styles'\n\n// Styled component for the wrapper\nconst Wrapper = styled('div')(({ theme }) => ({\n  '& > *': {\n    marginRight: {theme.spacing(6)} !important\n  }\n}))\n\nconst BadgesMaxValue = () => {\n  return (\n    <Wrapper className='demo-space-x'>\n      <Badge badgeContent={99} color='primary'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge badgeContent={100} color='primary'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge badgeContent={1000} max={999} color='primary'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n    </Wrapper>\n  )\n}\n\nexport default BadgesMaxValue\n"})}),V=(0,n.jsx)("pre",{className:"language-jsx",children:(0,n.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Badge from '@mui/material/Badge'\nimport Avatar from '@mui/material/Avatar'\n\nconst BadgesAlignment = () => {\n  return (\n    <div className='demo-space-x'>\n      <Badge color='primary' variant='dot'>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge color='primary' variant='dot' anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge color='primary' variant='dot' anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n      <Badge color='primary' variant='dot' anchorOrigin={{ vertical: 'top', horizontal: 'left' }}>\n        <Avatar src='/images/avatars/8.png' alt='User Avatar' />\n      </Badge>\n    </div>\n  )\n}\n\nexport default BadgesAlignment\n"})}),_=()=>(0,n.jsxs)(t.ZP,{container:!0,spacing:6,className:"match-height",children:[(0,n.jsx)(t.ZP,{item:!0,xs:12,md:6,children:(0,n.jsxs)(o.Z,{title:"Simple Badges",code:{tsx:O,jsx:w},children:[(0,n.jsxs)(s.Z,{sx:{mb:2},children:["Use ",(0,n.jsx)("code",{children:"badgeContent"})," prop for the text inside the badge and ",(0,n.jsx)("code",{children:"color"})," prop for different colors of a badge."]}),(0,n.jsx)(g,{})]})}),(0,n.jsx)(t.ZP,{item:!0,xs:12,md:6,children:(0,n.jsxs)(o.Z,{title:"Dot Badges",code:{tsx:L,jsx:S},children:[(0,n.jsxs)(s.Z,{sx:{mb:2},children:["Use ",(0,n.jsx)("code",{children:"variant='dot'"})," prop for dot badges."]}),(0,n.jsx)(c,{})]})}),(0,n.jsx)(t.ZP,{item:!0,xs:12,md:6,children:(0,n.jsxs)(o.Z,{title:"Badge Alignment",code:{tsx:V,jsx:I},children:[(0,n.jsxs)(s.Z,{sx:{mb:2},children:["Use ",(0,n.jsx)("code",{children:"anchorOrigin"})," prop to move the badge to any corner of the wrapped element."]}),(0,n.jsx)(j,{})]})}),(0,n.jsx)(t.ZP,{item:!0,xs:12,md:6,children:(0,n.jsxs)(o.Z,{title:"Maximum Value",code:{tsx:F,jsx:W},children:[(0,n.jsxs)(s.Z,{sx:{mb:2},children:["Use ",(0,n.jsx)("code",{children:"max"})," prop to cap the value of the badge content."]}),(0,n.jsx)(B,{})]})}),(0,n.jsx)(t.ZP,{item:!0,xs:12,md:6,children:(0,n.jsxs)(o.Z,{title:"Badge Overlap",code:{tsx:P,jsx:M},children:[(0,n.jsxs)(s.Z,{sx:{mb:2},children:["Use ",(0,n.jsx)("code",{children:"overlap"})," prop to place the badge relative to the corner of the wrapped element."]}),(0,n.jsx)(x,{})]})}),(0,n.jsx)(t.ZP,{item:!0,xs:12,md:6,children:(0,n.jsxs)(o.Z,{title:"Badge visibility",code:{tsx:R,jsx:z},children:[(0,n.jsxs)(s.Z,{sx:{mb:2},children:["The visibility of badges can be controlled using ",(0,n.jsx)("code",{children:"invisible"})," prop."]}),(0,n.jsx)(N,{})]})}),(0,n.jsx)(t.ZP,{item:!0,xs:12,children:(0,n.jsxs)(o.Z,{title:"Custom Light Badges",code:{tsx:T,jsx:k},children:[(0,n.jsxs)(s.Z,{sx:{mb:2},children:["If you want to use light variant of the badges, you need to use our custom component with"," ",(0,n.jsx)("code",{children:"skin='light'"})," prop."]}),(0,n.jsx)(v,{})]})})]});var G=_}},function(a){a.O(0,[5511,4704,9774,2888,179],function(){return a(a.s=89557)}),_N_E=a.O()}]);