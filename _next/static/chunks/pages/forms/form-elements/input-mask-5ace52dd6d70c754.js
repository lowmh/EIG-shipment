(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4373],{66485:function(e){function t(){return new DOMException("The request is not allowed","NotAllowedError")}async function n(e){if(!navigator.clipboard)throw t();return navigator.clipboard.writeText(e)}async function r(e){let n=document.createElement("span");n.textContent=e,n.style.whiteSpace="pre",n.style.webkitUserSelect="auto",n.style.userSelect="all",document.body.appendChild(n);let r=window.getSelection(),i=window.document.createRange();r.removeAllRanges(),i.selectNode(n),r.addRange(i);let l=!1;try{l=window.document.execCommand("copy")}finally{r.removeAllRanges(),window.document.body.removeChild(n)}if(!l)throw t()}async function i(e){try{await n(e)}catch(n){try{await r(e)}catch(e){throw e||n||t()}}}/*! clipboard-copy. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */e.exports=i},52149:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/forms/form-elements/input-mask",function(){return n(95035)}])},92223:function(e,t,n){"use strict";n.d(t,{Z:function(){return L}});var r=n(85893),i=n(67294),l=n(87357),o=n(66242),s=n(34386),a=n(67720),d=n(57922),c=n(93946),m=n(78445),p=n(44267),u=n(96420),h=n(98396),x=n(33454),b=n(63730),g=n(15660),j=n.n(g),f=n(86501),y=n(66485),I=n.n(y);let C=e=>e&&("TEXTAREA"===e.nodeName||"INPUT"===e.nodeName);var v=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=(0,i.useRef)(null),n=()=>{e.onSuccess&&e.onSuccess(),e.selectOnCopy&&C(t.current)&&t.current.select()},r=()=>{e.onError&&e.onError();let n=!1!==e.selectOnError;n&&C(t.current)&&t.current.select()},l=e=>{I()(e).then(n).catch(r)},o=(0,i.useCallback)(e=>{"string"==typeof e?l(e):t.current&&l(t.current.value)},[]);return{copy:o,target:t}};let G=e=>{let{id:t,sx:n,code:g,title:y,children:I,className:C}=e,[G,L]=(0,i.useState)(!1),[Z,k]=(0,i.useState)(null!==g.tsx?"tsx":"jsx"),P=v(),w=(0,h.Z)(e=>e.breakpoints.down("md"));(0,i.useEffect)(()=>{j().highlightAll()},[G,Z]);let F=()=>null!==g.tsx&&"tsx"===Z?g.tsx.props.children.props.children:null!==g.jsx&&"jsx"===Z?g.jsx.props.children.props.children:"",S=()=>{P.copy(F()),f.ZP.success("The source code has been copied to your clipboard.",{duration:2e3})};return(0,r.jsxs)(o.Z,{className:C,sx:{"& .MuiCardHeader-action":{lineHeight:.8},...n},id:t||"card-snippet--".concat(y.toLowerCase().replace(/ /g,"-")),children:[(0,r.jsx)(m.Z,{title:y,...w?{}:{action:(0,r.jsx)(c.Z,{onClick:()=>L(!G),children:(0,r.jsx)(b.Z,{icon:"tabler:code",fontSize:20})})}}),(0,r.jsx)(p.Z,{children:I}),w?null:(0,r.jsxs)(d.Z,{in:G,children:[(0,r.jsx)(a.Z,{sx:{my:"0 !important"}}),(0,r.jsxs)(p.Z,{sx:{position:"relative","& pre":{m:"0 !important",maxHeight:500}},children:[(0,r.jsx)(l.Z,{sx:{mb:4,display:"flex",alignItems:"center",justifyContent:"flex-end"},children:(0,r.jsxs)(x.Z,{exclusive:!0,size:"small",color:"primary",value:Z,onChange:(e,t)=>null!==t?k(t):null,children:[null!==g.tsx?(0,r.jsx)(u.Z,{value:"tsx",children:(0,r.jsx)(b.Z,{icon:"tabler:brand-typescript",fontSize:20})}):null,null!==g.jsx?(0,r.jsx)(u.Z,{value:"jsx",children:(0,r.jsx)(b.Z,{icon:"tabler:brand-javascript",fontSize:20})}):null]})}),(0,r.jsx)(s.Z,{title:"Copy the source",placement:"top",children:(0,r.jsx)(c.Z,{onClick:S,sx:{top:"5rem",color:"grey.100",right:"2.5625rem",position:"absolute"},children:(0,r.jsx)(b.Z,{icon:"tabler:copy",fontSize:20})})}),(0,r.jsx)("div",{children:null!==g[Z]?g[Z]:null})]})]})]})};var L=G},25358:function(e,t,n){"use strict";var r=n(85893),i=n(86886);let l=e=>{let{title:t,subtitle:n}=e;return(0,r.jsxs)(i.ZP,{item:!0,xs:12,children:[t,n||null]})};t.Z=l},12860:function(e,t,n){"use strict";var r=n(90948),i=n(87357);let l=(0,r.ZP)(i.Z)(e=>{let{theme:t}=e;return{"& input":{width:"100%",background:"none",lineHeight:1.4375,padding:"7.5px 13px",color:t.palette.text.primary,borderRadius:t.shape.borderRadius,fontSize:t.typography.body1.fontSize,fontFamily:t.typography.body1.fontFamily,border:"1px solid rgba(".concat(t.palette.customColors.main,", 0.2)"),transition:t.transitions.create(["border-color","box-shadow"]),"&:hover":{borderColor:"rgba(".concat(t.palette.customColors.main,", 0.28)")},"&:focus, &:focus-visible":{outline:0,boxShadow:t.shadows[2],borderColor:"".concat(t.palette.primary.main," !important"),"&::placeholder":{transform:"translateX(4px)"}},"&::placeholder":{opacity:.42,transition:t.transitions.create(["transform"],{duration:t.transitions.duration.shorter})}}}});t.Z=l},95035:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return I}});var r=n(85893),i=n(41664),l=n.n(i),o=n(86886),s=n(90948),a=n(15861),d=n(25358),c=n(92223),m=n(12860),p=n(47312),u=n(52034),h=n.n(u);n(49634);let x=(0,s.ZP)(p.Z)(e=>{let{theme:t}=e;return{lineHeight:1.154,maxWidth:"max-content",marginBottom:t.spacing(1),color:t.palette.text.primary,fontSize:t.typography.body2.fontSize}}),b=()=>(0,r.jsxs)(o.ZP,{container:!0,spacing:6,children:[(0,r.jsxs)(o.ZP,{item:!0,xs:12,sm:6,lg:4,children:[(0,r.jsx)(x,{htmlFor:"credit-card",children:"Credit Card"}),(0,r.jsx)(h(),{id:"credit-card",options:{creditCard:!0},placeholder:"0000 0000 0000 0000"})]}),(0,r.jsxs)(o.ZP,{item:!0,xs:12,sm:6,lg:4,children:[(0,r.jsx)(x,{htmlFor:"phone-number",children:"Phone Number"}),(0,r.jsx)(h(),{id:"phone-number",placeholder:"1 234 567 8900",options:{phone:!0,phoneRegionCode:"US"}})]}),(0,r.jsxs)(o.ZP,{item:!0,xs:12,sm:6,lg:4,children:[(0,r.jsx)(x,{htmlFor:"date",children:"Date"}),(0,r.jsx)(h(),{id:"date",placeholder:"2001-01-01",options:{date:!0,delimiter:"-",datePattern:["Y","m","d"]}})]}),(0,r.jsxs)(o.ZP,{item:!0,xs:12,sm:6,lg:4,children:[(0,r.jsx)(x,{htmlFor:"time",children:"Time"}),(0,r.jsx)(h(),{id:"time",placeholder:"12:00:00",options:{time:!0,timePattern:["h","m","s"]}})]}),(0,r.jsxs)(o.ZP,{item:!0,xs:12,sm:6,lg:4,children:[(0,r.jsx)(x,{htmlFor:"numeral",children:"Numeral"}),(0,r.jsx)(h(),{id:"numeral",placeholder:"10,000",options:{numeral:!0,numeralThousandsGroupStyle:"thousand"}})]}),(0,r.jsxs)(o.ZP,{item:!0,xs:12,sm:6,lg:4,children:[(0,r.jsx)(x,{htmlFor:"blocks",children:"Blocks"}),(0,r.jsx)(h(),{id:"blocks",placeholder:"Blocks [4, 3, 3]",options:{blocks:[4,3,3],uppercase:!0}})]}),(0,r.jsxs)(o.ZP,{item:!0,xs:12,sm:6,lg:4,children:[(0,r.jsx)(x,{htmlFor:"delimiter",children:"Delimiter"}),(0,r.jsx)(h(),{id:"delimiter",placeholder:"Delimiter: '.'",options:{delimiter:"\xb7",blocks:[3,3,3],uppercase:!0}})]}),(0,r.jsxs)(o.ZP,{item:!0,xs:12,sm:6,lg:4,children:[(0,r.jsx)(x,{htmlFor:"custom-delimiter",children:"Custom Delimiters"}),(0,r.jsx)(h(),{id:"custom-delimiter",placeholder:"Delimiter: ['.', '.', '-']",options:{delimiters:[".",".","-"],blocks:[3,3,3,2],uppercase:!0}})]}),(0,r.jsxs)(o.ZP,{item:!0,xs:12,sm:6,lg:4,children:[(0,r.jsx)(x,{htmlFor:"prefix",children:"Prefix"}),(0,r.jsx)(h(),{id:"prefix",options:{prefix:"+63",blocks:[3,3,3,4],uppercase:!0}})]})]}),g=(0,r.jsx)("pre",{className:"language-jsx",children:(0,r.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Grid from '@mui/material/Grid'\nimport { styled } from '@mui/material/styles'\nimport MuiInputLabel from '@mui/material/InputLabel'\n\n// ** CleaveJS Imports\nimport Cleave from 'cleave.js/react'\nimport 'cleave.js/dist/addons/cleave-phone.us'\n\nconst InputLabel = styled(MuiInputLabel)(({ theme }) => ({\n  lineHeight: 1.154,\n  maxWidth: 'max-content',\n  marginBottom: theme.spacing(1),\n  color: theme.palette.text.primary,\n  fontSize: theme.typography.body2.fontSize\n}))\n\nconst InputMaskExamples = () => {\n  return (\n    <Grid container spacing={6}>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='credit-card'>Credit Card</InputLabel>\n        <Cleave id='credit-card' options={{ creditCard: true }} placeholder='0000 0000 0000 0000' />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='phone-number'>Phone Number</InputLabel>\n        <Cleave id='phone-number' placeholder='1 234 567 8900' options={{ phone: true, phoneRegionCode: 'US' }} />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='date'>Date</InputLabel>\n        <Cleave\n          id='date'\n          placeholder='2001-01-01'\n          options={{ date: true, delimiter: '-', datePattern: ['Y', 'm', 'd'] }}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='time'>Time</InputLabel>\n        <Cleave id='time' placeholder='12:00:00' options={{ time: true, timePattern: ['h', 'm', 's'] }} />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='numeral'>Numeral</InputLabel>\n        <Cleave id='numeral' placeholder='10,000' options={{ numeral: true, numeralThousandsGroupStyle: 'thousand' }} />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='blocks'>Blocks</InputLabel>\n        <Cleave id='blocks' placeholder='Blocks [4, 3, 3]' options={{ blocks: [4, 3, 3], uppercase: true }} />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='delimiter'>Delimiter</InputLabel>\n        <Cleave\n          id='delimiter'\n          placeholder=\"Delimiter: '.'\"\n          options={{ delimiter: '\xb7', blocks: [3, 3, 3], uppercase: true }}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='custom-delimiter'>Custom Delimiters</InputLabel>\n        <Cleave\n          id='custom-delimiter'\n          placeholder=\"Delimiter: ['.', '.', '-']\"\n          options={{ delimiters: ['.', '.', '-'], blocks: [3, 3, 3, 2], uppercase: true }}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='prefix'>Prefix</InputLabel>\n        <Cleave id='prefix' options={{ prefix: '+63', blocks: [3, 3, 3, 4], uppercase: true }} />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default InputMaskExamples\n"})}),j=(0,r.jsx)("pre",{className:"language-jsx",children:(0,r.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Grid from '@mui/material/Grid'\nimport { styled } from '@mui/material/styles'\nimport MuiInputLabel, { InputLabelProps } from '@mui/material/InputLabel'\n\n// ** CleaveJS Imports\nimport Cleave from 'cleave.js/react'\nimport 'cleave.js/dist/addons/cleave-phone.us'\n\nconst InputLabel = styled(MuiInputLabel)<InputLabelProps>(({ theme }) => ({\n  lineHeight: 1.154,\n  maxWidth: 'max-content',\n  marginBottom: theme.spacing(1),\n  color: theme.palette.text.primary,\n  fontSize: theme.typography.body2.fontSize\n}))\n\nconst InputMaskExamples = () => {\n  return (\n    <Grid container spacing={6}>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='credit-card'>Credit Card</InputLabel>\n        <Cleave id='credit-card' options={{ creditCard: true }} placeholder='0000 0000 0000 0000' />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='phone-number'>Phone Number</InputLabel>\n        <Cleave id='phone-number' placeholder='1 234 567 8900' options={{ phone: true, phoneRegionCode: 'US' }} />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='date'>Date</InputLabel>\n        <Cleave\n          id='date'\n          placeholder='2001-01-01'\n          options={{ date: true, delimiter: '-', datePattern: ['Y', 'm', 'd'] }}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='time'>Time</InputLabel>\n        <Cleave id='time' placeholder='12:00:00' options={{ time: true, timePattern: ['h', 'm', 's'] }} />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='numeral'>Numeral</InputLabel>\n        <Cleave id='numeral' placeholder='10,000' options={{ numeral: true, numeralThousandsGroupStyle: 'thousand' }} />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='blocks'>Blocks</InputLabel>\n        <Cleave id='blocks' placeholder='Blocks [4, 3, 3]' options={{ blocks: [4, 3, 3], uppercase: true }} />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='delimiter'>Delimiter</InputLabel>\n        <Cleave\n          id='delimiter'\n          placeholder=\"Delimiter: '.'\"\n          options={{ delimiter: '\xb7', blocks: [3, 3, 3], uppercase: true }}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='custom-delimiter'>Custom Delimiters</InputLabel>\n        <Cleave\n          id='custom-delimiter'\n          placeholder=\"Delimiter: ['.', '.', '-']\"\n          options={{ delimiters: ['.', '.', '-'], blocks: [3, 3, 3, 2], uppercase: true }}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='prefix'>Prefix</InputLabel>\n        <Cleave id='prefix' options={{ prefix: '+63', blocks: [3, 3, 3, 4], uppercase: true }} />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default InputMaskExamples\n"})}),f=(0,s.ZP)(l())(e=>{let{theme:t}=e;return{textDecoration:"none",color:t.palette.primary.main}}),y=()=>(0,r.jsx)(m.Z,{children:(0,r.jsxs)(o.ZP,{container:!0,spacing:6,children:[(0,r.jsx)(d.Z,{title:(0,r.jsx)(a.Z,{variant:"h4",children:(0,r.jsx)(f,{href:"https://github.com/nosir/cleave.js",target:"_blank",children:"Cleave.js"})}),subtitle:(0,r.jsx)(a.Z,{sx:{color:"text.secondary"},children:"Format input text content when you are typing"})}),(0,r.jsx)(o.ZP,{item:!0,xs:12,children:(0,r.jsx)(c.Z,{title:"Input Masks",code:{tsx:j,jsx:g},children:(0,r.jsx)(b,{})})})]})});var I=y}},function(e){e.O(0,[5511,6565,9774,2888,179],function(){return e(e.s=52149)}),_N_E=e.O()}]);